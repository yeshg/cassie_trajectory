#include "mujSimulation.h"
#include <iostream>
#include <thread>
#include <chrono>

int main(int argc, const char** argv){

    double trajectory[][9] = {{0.0, -0.15, 0.0, 0.0, 0.0, 0.0, 0.02,  0.15, 1.0},
                            {0.0, -0.15, 0.057, 0.0, 0.0, 0.0, 0.04,  0.15, 1.0},
                            {0.0, -0.15, 0.105, 0.0, 0.0, 0.0, 0.06,  0.15, 1.0},
                            {0.0, -0.15, 0.143, 0.0, 0.0, 0.0, 0.08,  0.15, 1.0},
                            {0.0, -0.15, 0.171, 0.0, 0.0, 0.0, 0.1,  0.15, 1.0},
                            {0.0, -0.15, 0.19, 0.0, 0.0, 0.0, 0.12,  0.15, 1.0},
                            {0.0, -0.15, 0.2, 0.0, 0.0, 0.0, 0.14,  0.15, 1.0},
                            {0.0, -0.15, 0.2, 0.0, 0.0, 0.0, 0.16,  0.15, 1.0},
                            {0.0, -0.15, 0.19, 0.0, 0.0, 0.0, 0.18,  0.15, 1.0},
                            {0.0, -0.15, 0.171, 0.0, 0.0, 0.0, 0.2,  0.15, 1.0},
                            {0.0, -0.15, 0.143, 0.0, 0.0, 0.0, 0.22,  0.15, 1.0},
                            {0.0, -0.15, 0.105, 0.0, 0.0, 0.0, 0.24,  0.15, 1.0},
                            {0.0, -0.15, 0.057, 0.0, 0.0, 0.0, 0.26,  0.15, 1.0},
                            {0.0, -0.15, 0.0, 0.0, 0.0, 0.0, 0.28,  0.15, 1.0},
                            {0.0, -0.15, 0.0, 0.0, 0.0, 0.0, 0.3,  0.15, 1.0},
                            {0.0, -0.15, 0.0, 0.0, 0.0, 0.057, 0.32,  0.15, 1.0},
                            {0.0, -0.15, 0.0, 0.0, 0.0, 0.105, 0.34,  0.15, 1.0},
                            {0.0, -0.15, 0.0, 0.0, 0.0, 0.143, 0.36,  0.15, 1.0},
                            {0.0, -0.15, 0.0, 0.0, 0.0, 0.171, 0.38,  0.15, 1.0},
                            {0.0, -0.15, 0.0, 0.0, 0.0, 0.19, 0.4,  0.15, 1.0},
                            {0.0, -0.15, 0.0, 0.0, 0.0, 0.2, 0.42,  0.15, 1.0},
                            {0.0, -0.15, 0.0, 0.0, 0.0, 0.2, 0.44,  0.15, 1.0},
                            {0.0, -0.15, 0.0, 0.0, 0.0, 0.19, 0.46,  0.15, 1.0},
                            {0.0, -0.15, 0.0, 0.0, 0.0, 0.171, 0.48,  0.15, 1.0},
                            {0.0, -0.15, 0.0, 0.0, 0.0, 0.143, 0.5,  0.15, 1.0},
                            {0.0, -0.15, 0.0, 0.0, 0.0, 0.105, 0.52,  0.15, 1.0},
                            {0.0, -0.15, 0.0, 0.0, 0.0, 0.057, 0.54,  0.15, 1.0},
                            {0.0, -0.15, 0.0, 0.0, 0.0, 0.0, 0.56,  0.15, 1.0}};

	// mujSimulation sim = mujSimulation();

    // // bool exit = false;

    double traj_pos[] = {0.0, -0.15, 0.0, 0.0, 0.0, 0.171, 0.38,  0.15, 1.0};
    // // int phase_len = 28;
    // // int wait_time = 100;
    // // for(int i = 0; i < 100; i++)
    // // {
    // //     //std::this_thread::sleep_for(std::chrono::milliseconds(wait_time));
    // //     sim.simulationStep(traj_pos);
    // //     sim.renderWindow();
    // // }

    // // std::cout << "FOOOOO" << std::endl;

    mujSimulation* sim = mujSimulation_new(true);

    for(int i = 0; i < 30; i++)
    {
        std::cout << *fetch_cassie_ik(sim, trajectory[i], 50) << std::endl; 
    }

    return 0;

}